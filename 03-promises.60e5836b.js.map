{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QAmBpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFR,EAAAe,OAAOC,QAAQ,uBAAwCC,OAAfX,EAAS,QAAYW,OAANV,EAAM,OAE7DP,EAAAe,OAAOG,QAAQ,sBAAqCD,OAAfX,EAAS,QAAYW,OAANV,EAAM,M,GAE3DA,E,IA1BPL,EAAKiB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAMF,IAJF,IAAId,EAAQe,OAAOpB,EAAKK,MAAMgB,OACxBC,EAAOF,OAAOpB,EAAKsB,KAAKD,OACxBE,EAASH,OAAOpB,EAAKuB,OAAOF,OAEvBG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAEnCrB,EADiBqB,EACOnB,GACxBA,GAASiB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', handleSubmit)\n\nfunction handleSubmit(evt) { \n  evt.preventDefault();\n\n  let delay = Number(form.delay.value);\n  const step = Number(form.step.value);\n  const amount = Number(form.amount.value);\n\n    for (let i = 1; i <= amount; i += 1) {\n      const position = i;\n      createPromise(position, delay)\n      delay += step;\n    }\n\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => { \n    setTimeout(() => {\n      if (shouldResolve) {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      };\n    }, delay\n    )\n  })\n    \n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","Notify","success","concat","failure","addEventListener","evt","preventDefault","Number","value","step","amount","i"],"version":3,"file":"03-promises.60e5836b.js.map"}