{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QAmBpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFR,EAAAe,OAAOC,QAAQ,uBAAqBV,QAAiBC,OAErDP,EAAAe,OAAOE,QAAQ,sBAAoBX,QAAeC,MAAU,GAE7DA,EACF,G,CA3BLL,EAAKgB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAIb,EAAQc,OAAOnB,EAAKK,MAAMe,OAC9B,MAAMC,EAAOF,OAAOnB,EAAKqB,KAAKD,OACxBE,EAASH,OAAOnB,EAAKsB,OAAOF,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAEnCpB,EADiBoB,EACOlB,GACxBA,GAASgB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', handleSubmit)\n\nfunction handleSubmit(evt) { \n  evt.preventDefault();\n\n  let delay = Number(form.delay.value);\n  const step = Number(form.step.value);\n  const amount = Number(form.amount.value);\n\n    for (let i = 1; i <= amount; i += 1) {\n      const position = i;\n      createPromise(position, delay)\n      delay += step;\n    }\n\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => { \n    setTimeout(() => {\n      if (shouldResolve) {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      };\n    }, delay\n    )\n  })\n    \n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","Notify","success","failure","addEventListener","evt","preventDefault","Number","value","step","amount","i"],"version":3,"file":"03-promises.53272d5d.js.map"}